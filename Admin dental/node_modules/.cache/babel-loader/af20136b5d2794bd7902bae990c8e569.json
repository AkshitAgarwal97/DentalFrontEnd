{"ast":null,"code":"import _objectSpread from \"D:/Demo Projects/React Prijects/dental demo Project React/Admin dental/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\Demo Projects\\\\React Prijects\\\\dental demo Project React\\\\Admin dental\\\\src\\\\views\\\\UserProfile\\\\UserProfile.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Form, Input, InputNumber } from 'antd';\nimport Button from \"components/CustomButtons/Button.js\";\nimport React, { useState } from 'react';\nimport { Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n/* eslint-disable no-template-curly-in-string */\n\nvar validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not a valid email!',\n    number: '${label} is not a valid number!'\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}'\n  }\n};\n/* eslint-enable no-template-curly-in-string */\n\nvar styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  }\n}; // useEffect(() => {\n//   axios\n//       .post(\"http://localhost:4000/DentalAdmin/\")\n//       .then(res => {\n//         setData(res.data)\n//       })\n// }, [])\n\nvar useStyles = makeStyles(styles);\nexport default function UserProfile() {\n  var _s = $RefreshSig$();\n\n  var Uploader = function Uploader() {\n    _s();\n\n    var props = {\n      beforeUpload: function beforeUpload(file) {\n        if (file.type !== 'image/png') {\n          message.error(\"\".concat(file.name, \" is not a png file\"));\n        }\n\n        return file.type === 'image/png' ? true : Upload.LIST_IGNORE;\n      },\n      onChange: function onChange(info) {\n        console.log(info.fileList);\n      }\n    };\n    var classes = useStyles();\n\n    var onFinish = function onFinish(values) {\n      console.log(values);\n    };\n  };\n\n  _s(Uploader, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n    return [useStyles];\n  });\n\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, _objectSpread(_objectSpread({}, layout), {}, {\n      name: \"nest-messages\",\n      onFinish: onFinish,\n      validateMessages: validateMessages,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: ['user', 'name'],\n        label: \"Name\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: ['user', 'email'],\n        label: \"Email\",\n        rules: [{\n          type: 'email'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: ['user', 'phone'],\n        label: \"Phone\",\n        rules: [{\n          type: 'number',\n          min: 0,\n          max: 9999999999\n        }],\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: ['user', 'instagram'],\n        label: \"Instagram\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: ['user', 'facebook'],\n        label: \"FaceBook\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: ['user', 'twitter'],\n        label: \"Twitter\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: ['user', 'linkedin'],\n        label: \"LinkedIn\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: ['user', 'introduction'],\n        label: \"Introduction\",\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Upload, _objectSpread(_objectSpread({}, props), {}, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this),\n          children: \"Upload png only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n          offset: 8\n        }),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["D:/Demo Projects/React Prijects/dental demo Project React/Admin dental/src/views/UserProfile/UserProfile.js"],"names":["makeStyles","Form","Input","InputNumber","Button","React","useState","Upload","message","UploadOutlined","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","useStyles","UserProfile","Uploader","props","beforeUpload","file","type","error","name","LIST_IGNORE","onChange","info","console","log","fileList","classes","onFinish","values","min","max","offset"],"mappings":"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","sourcesContent":["\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Form, Input, InputNumber } from 'antd';\nimport Button from \"components/CustomButtons/Button.js\";\nimport React, { useState } from 'react';\nimport { Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n/* eslint-disable no-template-curly-in-string */\n\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not a valid email!',\n    number: '${label} is not a valid number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n};\n/* eslint-enable no-template-curly-in-string */\n\n\n\nconst styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\",\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n  },\n};\n// useEffect(() => {\n//   axios\n\n//       .post(\"http://localhost:4000/DentalAdmin/\")\n//       .then(res => {\n//         setData(res.data)\n\n\n//       })\n// }, [])\nconst useStyles = makeStyles(styles);\n\nexport default function UserProfile() \n{\n  const Uploader = () => \n  {\n    const props = \n    {\n      beforeUpload: file => \n      {\n        if (file.type !== 'image/png') \n        {\n          message.error(`${file.name} is not a png file`);\n        }\n        return file.type === 'image/png' ? true : Upload.LIST_IGNORE;\n      },\n      onChange: info => \n      {\n        console.log(info.fileList);\n      },\n    }\n    const classes = useStyles();\n    const onFinish = (values) => \n    {\n      console.log(values);\n    };\n  }\n    return \n    (\n      <>\n      <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n        <Form.Item\n          name={['user', 'name']}\n          label=\"Name\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name={['user', 'email']}\n          label=\"Email\"\n          rules={[\n            {\n              type: 'email',\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name={['user', 'phone']}\n          label=\"Phone\"\n          rules={[\n            {\n              type: 'number',\n              min: 0,\n              max: 9999999999,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n        <Form.Item name={['user', 'instagram']} label=\"Instagram\">\n          <Input />\n        </Form.Item>\n        <Form.Item name={['user', 'facebook']} label=\"FaceBook\">\n          <Input />\n        </Form.Item>\n        <Form.Item name={['user', 'twitter']} label=\"Twitter\">\n          <Input />\n        </Form.Item>\n        <Form.Item name={['user', 'linkedin']} label=\"LinkedIn\">\n          <Input />\n        </Form.Item>\n        <Form.Item name={['user', 'introduction']} label=\"Introduction\">\n          <Input.TextArea />\n        </Form.Item>\n        <Upload {...props}>\n          <Button icon={<UploadOutlined />}>Upload png only</Button>\n        </Upload>\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n      </>\n    );\n}  \n"]},"metadata":{},"sourceType":"module"}