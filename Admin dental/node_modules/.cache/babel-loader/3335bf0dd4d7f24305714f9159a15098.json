{"ast":null,"code":"import _objectSpread from \"D:/Demo Projects/React Prijects/dental demo Project React/Admin dental/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"D:/Demo Projects/React Prijects/dental demo Project React/Admin dental/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Demo Projects/React Prijects/dental demo Project React/Admin dental/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\Demo Projects\\\\React Prijects\\\\dental demo Project React\\\\Admin dental\\\\src\\\\views\\\\UserProfile\\\\UserProfile.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Form, Input, InputNumber, Upload, message } from 'antd';\nimport Button from \"components/CustomButtons/Button.js\";\nimport { useState } from 'react';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n/* eslint-disable no-template-curly-in-string */\n\nvar validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not a valid email!',\n    number: '${label} is not a valid number!'\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}'\n  }\n};\n/* eslint-enable no-template-curly-in-string */\n\nvar styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  }\n}; //  useEffect(() => {\n//    axios\n//        .post(\"http://localhost:4000/DentalAdmin/\")\n//        .then(res => {\n//          setData(res.onFinish)\n//        })\n//  }, [])\n\nvar useStyles = makeStyles(styles);\nexport default function UserProfile() {\n  var props = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n      authorization: 'authorization-text'\n    },\n    onChange: function onChange(info) {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n\n      if (info.file.status === 'done') {\n        message.success(\"\".concat(info.file.name, \" file uploaded successfully\"));\n      } else if (info.file.status === 'error') {\n        message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n      }\n    }\n  };\n\n  var submitData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var userdata;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // e.preventDefault()\n              userdata = {\n                name: name,\n                email: email,\n                phone: phone,\n                instagram: instagram\n              }; //     axios.post(\"http://localhost:4000/DentalAdmin/\", {\n              //         headers: {\n              //             \"Content-type\": \"application/json\",\n              //             \"Accept\": \"application/json\",\n              //         },\n              //         body: JSON.stringify(userdata)\n              //     })\n              //         .then(res => {\n              //             console.log(res)\n              //         })\n\n              console.log(userdata, \"hello\");\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Form, _objectSpread(_objectSpread({}, layout), {}, {\n    name: \"nest-messages\",\n    validateMessages: validateMessages,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      id: \"name\",\n      name: \"name\",\n      label: \"Name\",\n      value: name,\n      type: \"text\",\n      rules: [{\n        required: true\n      }],\n      onChange: function onChange(e) {\n        setName(e.target.value);\n      },\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: ['user', 'email'],\n      label: \"Email\",\n      value: email,\n      rules: [{\n        type: 'email'\n      }],\n      onChange: function onChange(e) {\n        setEmail(e.target.value);\n      },\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: ['user', 'phone'],\n      label: \"Phone\",\n      value: phone,\n      rules: [{\n        type: 'number',\n        min: 1000000000,\n        max: 9999999999\n      }],\n      onChange: function onChange(e) {\n        setPhone(e.target.value);\n      },\n      children: /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: ['user', 'instagram'],\n      label: \"Instagram\",\n      value: instagram,\n      onChange: function onChange(e) {\n        setInstagram(e.target.value);\n      },\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: ['user', 'facebook'],\n      label: \"FaceBook\",\n      value: facebook,\n      onChange: function onChange(e) {\n        setFacebook(e.target.value);\n      },\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: ['user', 'twitter'],\n      label: \"Twitter\",\n      value: twitter,\n      onChange: function onChange(e) {\n        setTwitter(e.target.value);\n      },\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: ['user', 'linkedin'],\n      label: \"LinkedIn\",\n      value: linkedin,\n      onChange: function onChange(e) {\n        setLinkedin(e.target.value);\n      },\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: ['user', 'introduction'],\n      label: \"Introduction\",\n      value: introduction,\n      onChange: function onChange(e) {\n        setIntroduction(e.target.value);\n      },\n      children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Upload, _objectSpread(_objectSpread({}, props), {}, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 20\n        }, this),\n        children: \"Click to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 6\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n        offset: 8\n      }),\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: submitData,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n} // ReactDOM.render(\n//  \n//   mountNode,\n// );\n\n_c = UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["D:/Demo Projects/React Prijects/dental demo Project React/Admin dental/src/views/UserProfile/UserProfile.js"],"names":["makeStyles","Form","Input","InputNumber","Upload","message","Button","useState","UploadOutlined","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","useStyles","UserProfile","props","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","success","error","submitData","userdata","phone","instagram","e","setName","target","value","type","setEmail","min","max","setPhone","setInstagram","facebook","setFacebook","twitter","setTwitter","linkedin","setLinkedin","introduction","setIntroduction","offset"],"mappings":"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","sourcesContent":["\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Form, Input, InputNumber,Upload, message } from 'antd';\nimport Button from \"components/CustomButtons/Button.js\";\nimport { useState } from 'react';\nimport { UploadOutlined } from '@ant-design/icons';\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n/* eslint-disable no-template-curly-in-string */\n\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not a valid email!',\n    number: '${label} is not a valid number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n};\n/* eslint-enable no-template-curly-in-string */\n\n\n\nconst styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\",\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n  },\n};\n//  useEffect(() => {\n//    axios\n\n//        .post(\"http://localhost:4000/DentalAdmin/\")\n//        .then(res => {\n//          setData(res.onFinish)\n        \n       \n//        })\n//  }, [])\nconst useStyles = makeStyles(styles);\n\nexport default function UserProfile() {\n  const props = {\n  name: 'file',\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n  headers: {\n    authorization: 'authorization-text',\n  },\n  onChange(info) {\n    if (info.file.status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === 'done') {\n      message.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n};\n\n  \n\n\nconst submitData = async () => {\n  \n    // e.preventDefault()\n    var userdata = {name,email,phone,instagram}\n//     axios.post(\"http://localhost:4000/DentalAdmin/\", {\n\n//         headers: {\n//             \"Content-type\": \"application/json\",\n//             \"Accept\": \"application/json\",\n//         },\n//         body: JSON.stringify(userdata)\n\n//     })\n//         .then(res => {\n//             console.log(res)\n\n\n//         })\n\nconsole.log(userdata,  \"hello\");\n}\n  return (\n    <Form {...layout} name=\"nest-messages\" validateMessages={validateMessages}>\n      <Form.Item\n        id=\"name\"\n        name='name'\n        label=\"Name\"\n        value={name}\n        type=\"text\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n        onChange={(e) => { setName(e.target.value) }}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={['user', 'email']}\n        label=\"Email\"\n        value={email}\n        rules={[\n          {\n            type: 'email',\n          },\n        ]}\n        onChange={(e) => { setEmail(e.target.value) }}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={['user', 'phone']}\n        label=\"Phone\"\n        value={phone}\n        rules={[\n          {\n            type: 'number',\n            min: 1000000000,\n            max: 9999999999,\n          },\n        ]}\n        onChange={(e) => { setPhone(e.target.value) }}\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item name={['user', 'instagram']} label=\"Instagram\" value={instagram} onChange={(e) => { setInstagram(e.target.value) }}>\n        <Input />\n      </Form.Item>\n      <Form.Item name={['user', 'facebook']} label=\"FaceBook\" value={facebook} onChange={(e) => { setFacebook(e.target.value) }}>\n        <Input />\n      </Form.Item>\n      <Form.Item name={['user', 'twitter']} label=\"Twitter\" value={twitter} onChange={(e) => { setTwitter(e.target.value) }}>\n        <Input />\n      </Form.Item>\n      <Form.Item name={['user', 'linkedin']} label=\"LinkedIn\" value={linkedin} onChange={(e) => { setLinkedin(e.target.value) }}>\n        <Input />\n      </Form.Item>\n      <Form.Item name={['user', 'introduction']} label=\"Introduction\" value={introduction} onChange={(e) => { setIntroduction(e.target.value) }}>\n        <Input.TextArea />\n      </Form.Item>\n      <Upload {...props}>\n     <Button icon={<UploadOutlined />}>Click to Upload</Button>\n   </Upload>\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button type=\"primary\" htmlType=\"submit\" onClick={(submitData)} >\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\n\n\n// ReactDOM.render(\n//  \n//   mountNode,\n// );"]},"metadata":{},"sourceType":"module"}